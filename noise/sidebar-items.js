initSidebarItems({"fn":[["cell2_manhattan",""],["cell2_manhattan_inv",""],["cell2_manhattan_value",""],["cell2_range",""],["cell2_range_inv",""],["cell2_seed_point",""],["cell2_value",""],["cell3_manhattan",""],["cell3_manhattan_inv",""],["cell3_manhattan_value",""],["cell3_range",""],["cell3_range_inv",""],["cell3_seed_point",""],["cell3_value",""],["cell4_manhattan",""],["cell4_manhattan_inv",""],["cell4_manhattan_value",""],["cell4_range",""],["cell4_range_inv",""],["cell4_seed_point",""],["cell4_value",""],["open_simplex2","2-dimensional OpenSimplex Noise"],["open_simplex3","3-dimensional OpenSimplex Noise"],["open_simplex4","4-dimensional OpenSimplex Noise"],["perlin2","2-dimensional perlin noise"],["perlin3","3-dimensional perlin noise"],["perlin4","4-dimensional perlin noise"],["range_sqr_euclidian2",""],["range_sqr_euclidian3",""],["range_sqr_euclidian4",""],["value2","2-dimensional value noise"],["value3","3-dimensional value noise"],["value4","4-dimensional value noise"]],"mod":[["modules",""]],"struct":[["Brownian2","A callable struct for applying 2-dimensional fractional Brownian motion."],["Brownian3","A callable struct for applying 3-dimensional fractional Brownian motion."],["Brownian4","A callable struct for applying 4-dimensional fractional Brownian motion."],["PermutationTable","A seed table, required by all noise functions."]],"trait":[["GenFn2","A trait alias for a 2-dimensional noise function."],["GenFn3","A trait alias for a 3-dimensional noise function."],["GenFn4","A trait alias for a 4-dimensional noise function."],["NoiseModule","Base trait for noise modules."]],"type":[["Point2","A 2-dimensional point. This is a fixed sized array, so should be compatible with most linear algebra libraries."],["Point3","A 3-dimensional point. This is a fixed sized array, so should be compatible with most linear algebra libraries."],["Point4","A 4-dimensional point. This is a fixed sized array, so should be compatible with most linear algebra libraries."]]});